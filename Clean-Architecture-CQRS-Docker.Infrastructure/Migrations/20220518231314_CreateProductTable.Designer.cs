// <auto-generated />
using Clean_Architecture_CQRS_Docker.Infrastructure.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clean_Architecture_CQRS_Docker.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220518231314_CreateProductTable")]
    partial class CreateProductTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Clean_Architecture_CQRS_Docker.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Samsung",
                            Price = 800m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Iphone",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Xiaomi",
                            Price = 600m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Nokia",
                            Price = 20m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
